name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Format
        run: cargo fmt --all -- --check

      - name: Clippy with all features
        run: cargo clippy --all-features --all-targets -- -D warnings

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hdfs-version: ["2.10.1", "3.2.3", "3.3.2"]

    steps:
      - uses: actions/checkout@v3
      - name: Checkout python env
        uses: actions/setup-python@v4.6.1
        with:
          python-version: "3.8"
      - name: Checkout java env
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Setup-hdfs env
        uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: ${{ matrix.hdfs-version }}

      - name: Test
        run: |
          export CLASSPATH=$(find $HADOOP_HOME -iname "*.jar" | xargs echo | tr ' ' ':')
          cargo test -- --nocapture
        env:
          RUST_LOG: DEBUG
          RUST_BACKTRACE: full
          HDRS_TEST: on
          HDRS_NAMENODE: hdfs://${{ env.HDFS_NAMENODE_ADDR }}
          HDRS_WORKDIR: /
          LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}

      - name: Test with all features
        run: |
          export CLASSPATH=$(find $HADOOP_HOME -iname "*.jar" | xargs echo | tr ' ' ':')
          cargo test --all-features -- --nocapture
        env:
          RUST_LOG: DEBUG
          RUST_BACKTRACE: full
          HDRS_TEST: on
          HDRS_NAMENODE: hdfs://${{ env.HDFS_NAMENODE_ADDR }}
          HDRS_WORKDIR: /
          LD_LIBRARY_PATH: ${{ env.JAVA_HOME }}/lib/server:${{ env.LD_LIBRARY_PATH }}
